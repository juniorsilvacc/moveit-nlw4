{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/juniorsilva/Documentos/PROJETOS GITHUB/moveit-nlw4/src/contexts/ChallengesContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from 'react';\nimport challenges from '../../challenges.json';\nexport var ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState(0),\n      currentExperience = _useState2[0],\n      setCurrentExperience = _useState2[1];\n\n  var _useState3 = useState(0),\n      challengesCompleted = _useState3[0],\n      setChallengesCompleted = _useState3[1];\n\n  var _useState4 = useState(null),\n      activeChallenge = _useState4[0],\n      setActiveChallenge = _useState4[1];\n\n  var experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n  useEffect(function () {\n    Notification.requestPermission();\n  }, []);\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  function startNewChallenge() {\n    var randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    var challenge = challenges[randomChallengeIndex];\n    setActiveChallenge(challenge);\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completChallenge() {\n    if (!activeChallenge) {\n      return;\n    }\n\n    var amount = activeChallenge.amount;\n    var finalExperience = currentExperience + amount;\n\n    if (finalExperience >= experienceToNextLevel) {\n      finalExperience = finalExperience - experienceToNextLevel;\n      levelUp();\n    }\n\n    setCurrentExperience(finalExperience);\n    setActiveChallenge(null);\n    setChallengesCompleted(challengesCompleted + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level: level,\n      currentExperience: currentExperience,\n      challengesCompleted: challengesCompleted,\n      experienceToNextLevel: experienceToNextLevel,\n      levelUp: levelUp,\n      startNewChallenge: startNewChallenge,\n      activeChallenge: activeChallenge,\n      resetChallenge: resetChallenge,\n      completChallenge: completChallenge\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChallengesProvider, \"mXQLPpEuqfijIicM0DJuMSLmJHY=\");\n\n_c = ChallengesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengesProvider\");","map":{"version":3,"sources":["/home/juniorsilva/Documentos/PROJETOS GITHUB/moveit-nlw4/src/contexts/ChallengesContext.tsx"],"names":["createContext","useState","useEffect","challenges","ChallengesContext","ChallengesProvider","children","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","activeChallenge","setActiveChallenge","experienceToNextLevel","Math","pow","Notification","requestPermission","levelUp","startNewChallenge","randomChallengeIndex","floor","random","length","challenge","resetChallenge","completChallenge","amount","finalExperience"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAA6CC,SAA7C,QAA8D,OAA9D;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AAwBA,OAAO,IAAMC,iBAAiB,gBAAGJ,aAAa,CAAC,EAAD,CAAvC;AAEP,OAAO,SAASK,kBAAT,OAAiE;AAAA;;AAAA,MAApCC,QAAoC,QAApCA,QAAoC;;AAAA,kBAE1CL,QAAQ,CAAC,CAAD,CAFkC;AAAA,MAE7DM,KAF6D;AAAA,MAEtDC,QAFsD;;AAAA,mBAGlBP,QAAQ,CAAC,CAAD,CAHU;AAAA,MAG7DQ,iBAH6D;AAAA,MAG1CC,oBAH0C;;AAAA,mBAIdT,QAAQ,CAAC,CAAD,CAJM;AAAA,MAI7DU,mBAJ6D;AAAA,MAIxCC,sBAJwC;;AAAA,mBAMtBX,QAAQ,CAAC,IAAD,CANc;AAAA,MAM7DY,eAN6D;AAAA,MAM5CC,kBAN4C;;AAQpE,MAAMC,qBAAqB,GAAGC,IAAI,CAACC,GAAL,CAAS,CAACV,KAAK,GAAG,CAAT,IAAc,CAAvB,EAA0B,CAA1B,CAA9B;AAEAL,EAAAA,SAAS,CAAC,YAAM;AACZgB,IAAAA,YAAY,CAACC,iBAAb;AACH,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASC,OAAT,GAAkB;AACdZ,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACH;;AAED,WAASc,iBAAT,GAA4B;AACxB,QAAMC,oBAAoB,GAAGN,IAAI,CAACO,KAAL,CAAWP,IAAI,CAACQ,MAAL,KAAgBrB,UAAU,CAACsB,MAAtC,CAA7B;AACA,QAAMC,SAAS,GAAGvB,UAAU,CAACmB,oBAAD,CAA5B;AAEAR,IAAAA,kBAAkB,CAACY,SAAD,CAAlB;AAEH;;AAED,WAASC,cAAT,GAAyB;AACrBb,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH;;AAED,WAASc,gBAAT,GAA2B;AACvB,QAAG,CAACf,eAAJ,EAAoB;AAChB;AACH;;AAHsB,QAIhBgB,MAJgB,GAINhB,eAJM,CAIhBgB,MAJgB;AAKvB,QAAIC,eAAe,GAAGrB,iBAAiB,GAAGoB,MAA1C;;AAEA,QAAGC,eAAe,IAAIf,qBAAtB,EAA4C;AACxCe,MAAAA,eAAe,GAAGA,eAAe,GAAGf,qBAApC;AACAK,MAAAA,OAAO;AACV;;AAEDV,IAAAA,oBAAoB,CAACoB,eAAD,CAApB;AACAhB,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAF,IAAAA,sBAAsB,CAACD,mBAAmB,GAAG,CAAvB,CAAtB;AAEH;;AAED,sBACI,QAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAE;AAC/BJ,MAAAA,KAAK,EAALA,KAD+B;AAE/BE,MAAAA,iBAAiB,EAAjBA,iBAF+B;AAG/BE,MAAAA,mBAAmB,EAAnBA,mBAH+B;AAI/BI,MAAAA,qBAAqB,EAArBA,qBAJ+B;AAK/BK,MAAAA,OAAO,EAAPA,OAL+B;AAM/BC,MAAAA,iBAAiB,EAAjBA,iBAN+B;AAO/BR,MAAAA,eAAe,EAAfA,eAP+B;AAQ/Bc,MAAAA,cAAc,EAAdA,cAR+B;AAS/BC,MAAAA,gBAAgB,EAAhBA;AAT+B,KAAnC;AAAA,cAWKtB;AAXL;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GA/DeD,kB;;KAAAA,kB","sourcesContent":["import { createContext, useState, ReactNode, useEffect } from 'react';\nimport challenges from '../../challenges.json';\n\ninterface Challenge{\n    type: 'body' | 'eye'; \n    description: String;\n    amount: number;\n}\n\ninterface ChallengesContextDate{\n    level: number;\n    currentExperience: number;\n    challengesCompleted: number;\n    experienceToNextLevel: number;\n    activeChallenge: Challenge;\n    levelUp: () => void;\n    startNewChallenge: () => void;\n    resetChallenge: () => void;\n    completChallenge: () => void;\n}\n\ninterface ChallengesProviderProps{\n    children: ReactNode;\n}\n\nexport const ChallengesContext = createContext({} as ChallengesContextDate)\n\nexport function ChallengesProvider({children} : ChallengesProviderProps){\n\n    const [level, setLevel] = useState(1);\n    const [currentExperience, setCurrentExperience] = useState(0);\n    const [challengesCompleted, setChallengesCompleted] = useState(0);\n\n    const [activeChallenge, setActiveChallenge] = useState(null);\n\n    const experienceToNextLevel = Math.pow((level + 1) * 4, 2)\n\n    useEffect(() => {\n        Notification.requestPermission();\n    }, [])\n\n    function levelUp(){\n        setLevel(level + 1)\n    }\n\n    function startNewChallenge(){\n        const randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n        const challenge = challenges[randomChallengeIndex];\n\n        setActiveChallenge(challenge)\n        \n    }\n\n    function resetChallenge(){\n        setActiveChallenge(null)\n    }\n\n    function completChallenge(){\n        if(!activeChallenge){\n            return;\n        }\n        const {amount} = activeChallenge;\n        let finalExperience = currentExperience + amount;\n\n        if(finalExperience >= experienceToNextLevel){\n            finalExperience = finalExperience - experienceToNextLevel;\n            levelUp();\n        }\n\n        setCurrentExperience(finalExperience);\n        setActiveChallenge(null);\n        setChallengesCompleted(challengesCompleted + 1);\n\n    }\n\n    return  (\n        <ChallengesContext.Provider value={{\n            level, \n            currentExperience, \n            challengesCompleted, \n            experienceToNextLevel,\n            levelUp,\n            startNewChallenge,\n            activeChallenge,\n            resetChallenge,\n            completChallenge,\n            }}>\n            {children}\n        </ChallengesContext.Provider>\n    )\n} \n"]},"metadata":{},"sourceType":"module"}